/*
 * This file is generated by jOOQ.
 */
package model.tables.records


import java.lang.Boolean
import java.lang.Integer
import java.lang.String
import java.time.LocalDateTime

import model.tables.Task

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
class TaskRecord extends UpdatableRecordImpl[TaskRecord](Task.TASK) {

  /**
   * Setter for <code>public.task.id</code>.
   */
  def setId(value: Integer): Unit = {
    set(0, value)
  }

  /**
   * Getter for <code>public.task.id</code>.
   */
  def getId: Integer = get(0).asInstanceOf[Integer]

  /**
   * Setter for <code>public.task.title</code>.
   */
  def setTitle(value: String): Unit = {
    set(1, value)
  }

  /**
   * Getter for <code>public.task.title</code>.
   */
  def getTitle: String = get(1).asInstanceOf[String]

  /**
   * Setter for <code>public.task.done</code>.
   */
  def setDone(value: Boolean): Unit = {
    set(2, value)
  }

  /**
   * Getter for <code>public.task.done</code>.
   */
  def getDone: Boolean = get(2).asInstanceOf[Boolean]

  /**
   * Setter for <code>public.task.description</code>.
   */
  def setDescription(value: String): Unit = {
    set(3, value)
  }

  /**
   * Getter for <code>public.task.description</code>.
   */
  def getDescription: String = get(3).asInstanceOf[String]

  /**
   * Setter for <code>public.task.created_at</code>.
   */
  def setCreatedAt(value: LocalDateTime): Unit = {
    set(4, value)
  }

  /**
   * Getter for <code>public.task.created_at</code>.
   */
  def getCreatedAt: LocalDateTime = get(4).asInstanceOf[LocalDateTime]

  /**
   * Setter for <code>public.task.updated_at</code>.
   */
  def setUpdatedAt(value: LocalDateTime): Unit = {
    set(5, value)
  }

  /**
   * Getter for <code>public.task.updated_at</code>.
   */
  def getUpdatedAt: LocalDateTime = get(5).asInstanceOf[LocalDateTime]

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  override def key: Record1[Integer] = super.key.asInstanceOf[ Record1[Integer] ]

  /**
   * Create a detached, initialised TaskRecord
   */
  def this(id : Integer, title : String, done : Boolean, description : String, createdAt : LocalDateTime, updatedAt : LocalDateTime) = {
    this()

    this.setId(id)
    this.setTitle(title)
    this.setDone(done)
    this.setDescription(description)
    this.setCreatedAt(createdAt)
    this.setUpdatedAt(updatedAt)
    resetChangedOnNotNull()
  }
}
